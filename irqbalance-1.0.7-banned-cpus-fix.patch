commit 180cf09ef5fb4f6479cb232b79abd6f6f3e6eea4
Author: Neil Horman <nhorman@tuxdriver.com>
Date:   Tue Jan 14 15:54:45 2014 -0500

    consider banned cpus earlier during placement
    
    Dave Sullivan and Petr Holasek reported that irqbalance didn't set affinity
    properly when IRQBALANCE_BANNED_IRQS was set to a single cpu.  The problem
    turned out to be that numa node assignment for an irq is done without
    consideration for the banned cpu set.  The result is that irqs can be assigned
    to a node that has no elligible cpus, and as a result, those irqs don't have
    their affinity set.  Fix this by restricting node assignment to nodes that have
    an elligible cpu as defined by the unbanned_cpus bitmask
    
    Signed-off-by: Neil Horman <nhorman@tuxdriver.com>

diff --git a/placement.c b/placement.c
index 5766579..3f3fdf1 100644
--- a/placement.c
+++ b/placement.c
@@ -51,6 +51,14 @@ static void find_best_object(struct topo_obj *d, void *data)
 		return;
 
 	/*
+	 * also don't consider any node that doesn't have at least one cpu in
+	 * the unbanned list
+	 */
+	if ((d->obj_type == OBJ_TYPE_NODE) &&
+	    (!cpus_intersects(d->mask, unbanned_cpus)))
+		return;
+
+	/*
  	 * If the hint policy is subset, then we only want 
  	 * to consider objects that are within the irqs hint, but
  	 * only if that irq in fact has published a hint
@@ -137,11 +145,17 @@ static void place_irq_in_node(struct irq_info *info, void *data __attribute__((u
 	struct obj_placement place;
 	struct topo_obj *asign;
 
-	if( info->level == BALANCE_NONE)
+	if ((info->level == BALANCE_NONE) && cpus_empty(banned_cpus))
 		return;
 
 	if (irq_numa_node(info)->number != -1) {
 		/*
+		 * Need to make sure this node is elligible for migration
+		 * given the banned cpu list
+		 */
+		if (!cpus_intersects(irq_numa_node(info)->mask, unbanned_cpus))
+			goto find_placement;
+		/*
  		 * This irq belongs to a device with a preferred numa node
  		 * put it on that node
  		 */
@@ -151,6 +165,7 @@ static void place_irq_in_node(struct irq_info *info, void *data __attribute__((u
 		return;
 	}
 
+find_placement:
 	place.best_cost = ULLONG_MAX;
 	place.best = NULL;
 	place.least_irqs = NULL;
